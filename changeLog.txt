# easyflow version 0.2.0

## backwards-incompatible changes

* [audioSpigot~] was renamed to [spigot~]

## improvements

* *[getFolder]* - new outlet: outputs file name
* *[sample~]* - now displays sample name

## new abstractions

* *[getFile]* - just like [getFolder] but outputs the file on the left outlet and the folder on the right
* *[getNthScalar]* - outputs a pointer to the Nth scalar in a given subpatch.
* *[getNofScalars]* - outputs the number of scalars in a given subpatch.
* *[getAllScalars]* - reads a data holding subPatch and outputs pointers to all the scalars it contains, one at a time.
* *[listsOfLength]* - passes lists of the desired length to the left outlet and other lists to the right outlet.
* *[scope~]* - simple and easily controllabe osciloscope!
* *[substring]* - takes a substring from a symbol. Understands negative indexes and has a special variable "L" for the string length!
* *[sublist]* - takes a sublist from a list. Understands negative indexes and has a special variable "L" for the list length!
* *[stringLength]* - convenient abstraction to shorten your code when you need to get a symbol's length.
* *[curves][curvesmap]* - an abstraction for converting numeric streams between different curves.
* *[curves~][curvesmap~]* - just like [curves] and [curvesmap] but for signals
* *[roundIfVeryClose]* - rounds numbers that are close to an integer (1.6401e-8 to 0, for example). You can use arbritary precision.
* *[colorCurly][colorCurlyF]* - Colorhighlighting abstractions containing a "{}". See the wiki for more information.
* *[rColor][sColor]* - Automatic color highlighting and [send]/[receive] bundled together. See the wiki for more information.
* *[arrayList]* - holds a list and provides index based get, set and remove methods. Similar to java's ArrayList.
* *[any]* - object able to store any kind of control data. It's like [float][symbol]and [list] packed into one. Also stores custom selectors.
* *[var]* - behaves just like [value] but stores any kind of data (using [anything]) including custom selectors.
* *[switch2~] family* - the family is now complete from [switch2~] up to [switch7~]
* *[doubleClick]* - outputs a bang whenever it receives two bangs in a specified period of time.

## bugfixes

* [MixAB~] now starts with amplitude 1 on the left outlet's [vline~] so you don't need to click the [hsl] to initialize the amplitude. (Sending |1( to the [vline~] objects on [loadbang])
* [listReplace-help] file name was corrected. There was an typo: "helpp"

# easyflow version 0.1.0

## New abstractions

### Lists

[addList][copyList][left2right][l2r][right2left][r2l][funnel][passNthElement][passPair][listPlus][listCompare][listConcatenate][listPick][listPickPair][listReplace][listReplaceAtIndex][listSplit][popLastN][searchElem]


### Symbols 

[symbolize][numberSymbol][lowerCase][upperCase][getFolder][symbolSplit]

### Signals

[audioSpigot~][switch2~][mixAB~][sample~]

### Utilities

[counter][for][keyChange][hold][metrosnap~][mixAB]

### Flow Control

[alternate][compare][switch2]...[switch7]

### Math

[nearest][numbersbetween][map][keepMax][keepMin][hexCharToDec]

### Color

[colorNames][redGreenBlue][rgb][hueSaturationBrightness][hsb][hueSaturationLuminosity][easyflow/hsl][hexColor][colorSyntax]
### Tables

[tabCopy][tabReverse][tabReverseCopy]

### Coding

#### Color highlighting

[colorHighlighting][colorDef][colorCirc][colorCnv][colorTri][labelCnv][colorCircF][colorCnvF][colorTriF][labelCnvF]

#### Debugging and utilities

[GOPTool][printHere]