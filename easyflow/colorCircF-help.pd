#N canvas 636 50 645 588 10;
#X obj 483 546 easyflow-info;
#X obj 166 159 colorCircF 0 0 0;
#N canvas 0 50 274 166 subpatch1 0;
#X obj 45 65 v \$0-red;
#X obj 45 91 v \$0-blue;
#X obj 45 118 v \$0-green;
#X obj 34 65 colorCnvF 0 255 128;
#X obj 34 118 colorCnvF 64 255 128;
#X obj 34 91 colorCnvF 154 255 128;
#X restore 87 376 pd subpatch1;
#N canvas 323 265 306 208 subpatch2 0;
#N canvas 0 50 289 237 subpatch 0;
#X obj 67 63 v \$0-red;
#N canvas 312 176 304 179 subpatch 0;
#X obj 63 65 v \$0-purple;
#X obj 62 88 v \$0-yellow;
#X obj 52 65 colorCnvF 192 255 128;
#X obj 51 88 colorCnvF 32 255 128;
#X restore 66 109 pd subpatch 5;
#X obj 56 63 colorCnvF 0 255 128;
#X obj 27 110 colorCircF 192 255 128;
#X obj 45 110 colorCircF 32 255 128;
#X restore 100 39 pd subpatch 3;
#N canvas 0 50 274 118 subpatch 0;
#X obj 58 63 v \$0-black;
#X obj 47 63 colorCnvF 0 0 0;
#X restore 100 73 pd subpatch 4;
#X obj 80 75 colorCircF 0 0 0;
#X obj 58 41 colorCircF 192 255 128;
#X obj 75 41 colorCircF 32 255 128;
#X obj 39 41 colorCircF 0 255 128;
#X restore 267 377 pd subpatch2;
#X text 20 85 It is used to mark send/receive names and [value] objects
that are inside subpatches. It allows for quickly navigating the hierarchy
of your patch when you are following the data flow of your wireless
connections.;
#X obj 493 343 v \$0-purple;
#X obj 394 340 v \$0-red;
#X obj 493 368 v \$0-yellow;
#X obj 395 365 v \$0-blue;
#X obj 395 392 v \$0-green;
#X obj 494 392 v \$0-black;
#X text 27 335 Try using the circles to find the [v] boxes;
#X obj 383 340 colorCnvF 0 255 128;
#X obj 482 343 colorCnvF 192 255 128;
#X obj 482 368 colorCnvF 32 255 128;
#X obj 384 392 colorCnvF 64 255 128;
#X obj 384 365 colorCnvF 154 255 128;
#X obj 483 392 colorCnvF 0 0 0;
#X obj 29 159 colorCircF 0 255 128;
#X obj 77 159 colorCircF 64 255 128;
#X obj 100 159 colorCircF 18 255 128;
#X obj 143 159 colorCircF 192 255 128;
#X obj 53 159 colorCircF 32 255 128;
#X obj 121 159 colorCircF 154 255 128;
#X obj 29 379 colorCircF 0 255 128;
#X obj 47 379 colorCircF 64 255 128;
#X obj 65 379 colorCircF 154 255 128;
#X obj 208 379 colorCircF 192 255 128;
#X obj 226 379 colorCircF 32 255 128;
#X obj 189 379 colorCircF 0 255 128;
#X obj 245 379 colorCircF 0 0 0;
#X obj 43 469 for;
#X obj 305 196 colorSyntax;
#X text 279 151 The arguments parsing is powered by:, f 21;
#X text 279 226 see it's help file for more information., f 21;
#N canvas 0 50 330 174 more examples 0;
#X obj 36 40 colorCircF 0 255 128;
#X text 54 37 [colorCircF 0 255 128];
#X obj 36 60 colorCircF 64 64 255 rgb;
#X text 54 57 [colorCircF 64 64 255 rgb];
#X obj 36 101 colorCircF 30 128 200 hsb;
#X text 52 97 [colorCircF 30 128 200 hsb];
#X obj 36 80 colorCircF 195 128 132 hsl;
#X text 53 79 [colorCircF 195 128 132 hsl];
#X obj 36 123 colorCircF 55 128 90 hsl;
#X text 52 121 [colorCircF 55 128 90 hsl];
#X restore 290 270 pd more examples;
#X obj 30 195 colorCircF black;
#X text 48 192 [colorCircF black];
#X obj 30 213 colorCircF hotPink;
#X text 48 210 [colorCircF hotPink];
#X obj 30 232 colorCircF sky;
#X text 48 229 [colorCircF sky];
#X obj 30 249 colorCircF orange;
#X text 48 247 [colorCircF orange];
#X obj 307 544 colorHighlighting-info;
#X obj 307 516 cnv 11 164 17 empty empty complete information 2 9
0 14 -1 -262144 0;
#X text 37 534 see also:;
#X text 131 534 [colorCirc];
#X text 19 27 [colorCircF] is a factory abstraction that creates a
colored circle of fixed size. Then you can copy-paste the [cnv] into
your patch. (don't forget to delete the receive name);
#X obj 115 537 colorCirc;
#X text 38 437 Example of usage: see [for] and [gopTool], f 62;
#N canvas 0 50 450 300 gopTool 0;
#X obj 51 36 gopTool;
#X restore 81 468 pd gopTool;
#X coords 0 588 1 587 10 17 0;
