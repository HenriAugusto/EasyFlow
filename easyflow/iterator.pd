#N canvas 328 225 763 485 10;
#X obj 79 36 inlet;
#X obj 79 398 outlet;
#N canvas 532 52 377 531 next 0;
#X obj 93 334 outlet;
#X obj 145 281 cnv 10 10 17 empty empty empty 20 12 0 14 -169008 -131009
0;
#X obj 49 76 cnv 10 10 17 empty empty empty 20 12 0 14 -56777 -131009
0;
#X obj 93 304 listPick, f 11;
#X obj 60 54 bng 15 250 50 0 empty empty empty 17 7 0 10 -262144 -1
-1;
#X floatatom 60 97 5 0 0 0 - - -;
#X obj 156 281 r \$0-list;
#X obj 60 177 select;
#X obj 80 124 cnv 11 12 17 empty empty empty 2 9 0 14 -42489 -262144
0;
#X obj 93 124 r \$0-length;
#X text 138 335 element;
#X obj 93 145 + 1;
#X obj 60 76 ++v \$0-index;
#X obj 113 410 cnv 10 10 17 empty empty empty 20 12 0 14 -56777 -131009
0;
#X obj 124 410 --v \$0-index;
#X obj 60 30 inlet;
#X obj 60 410 outlet;
#X obj 187 251 cnv 10 10 17 empty empty empty 20 12 0 14 -260097 -131009
0;
#X obj 198 251 s \$0-canRemove;
#X obj 93 202 trigger float bang;
#X msg 198 226 1;
#X obj 196 434 cnv 10 10 17 empty empty empty 20 12 0 14 -260097 -131009
0;
#X obj 207 434 s \$0-canRemove;
#X msg 207 409 0;
#X obj 60 389 trigger b b b, f 25;
#X connect 3 0 0 0;
#X connect 4 0 12 0;
#X connect 5 0 7 0;
#X connect 6 0 3 1;
#X connect 7 0 24 0;
#X connect 7 1 19 0;
#X connect 9 0 11 0;
#X connect 11 0 7 1;
#X connect 12 0 5 0;
#X connect 15 0 4 0;
#X connect 19 0 3 0;
#X connect 19 1 20 0;
#X connect 20 0 18 0;
#X connect 23 0 22 0;
#X connect 24 0 16 0;
#X connect 24 1 14 0;
#X connect 24 2 23 0;
#X restore 79 280 pd next;
#X obj 58 289 cnv 10 10 12 empty empty ● 1 5 0 15 -262144 -1024 0
;
#X obj 58 276 cnv 10 10 12 empty empty ● 1 5 0 15 -262144 -169008
0;
#X obj 45 289 cnv 10 10 12 empty empty ● 1 5 0 15 -262144 -56777
0;
#X obj 250 397 outlet;
#X obj 45 276 cnv 10 10 12 empty empty ● 1 5 0 15 -262144 -260097
0;
#N canvas 0 50 502 444 remove 0;
#X obj 114 175 cnv 10 10 17 empty empty empty 20 12 0 14 -169008 -131009
0;
#X obj 125 175 r \$0-list;
#X obj 104 201 list;
#X obj 104 140 trigger bang bang;
#X obj 203 175 v \$0-index;
#X obj 192 175 cnv 10 10 17 empty empty empty 20 12 0 14 -56777 -131009
0;
#X obj 164 323 cnv 11 12 17 empty empty empty 2 9 0 14 -42489 -262144
0;
#X obj 93 275 cnv 10 10 17 empty empty empty 20 12 0 14 -169008 -131009
0;
#X obj 104 275 s \$0-list;
#X obj 239 275 cnv 10 10 17 empty empty empty 20 12 0 14 -56777 -131009
0;
#X obj 250 275 --v \$0-index;
#X obj 177 300 list length;
#X obj 177 323 s \$0-length;
#X obj 104 229 listRemove;
#X obj 312 327 cnv 10 10 17 empty empty empty 20 12 0 14 -260097 -131009
0;
#X obj 323 327 s \$0-canRemove;
#X obj 104 250 trigger list list bang bang, f 37;
#X msg 323 303 0;
#X obj 47 16 inlet;
#X obj 93 36 cnv 10 10 17 empty empty empty 20 12 0 14 -260097 -131009
0;
#X obj 104 36 r \$0-canRemove;
#X obj 104 57 tgl 15 0 empty empty empty 17 7 0 10 -262144 -1 -1 0
1;
#X obj 47 83 switch2, f 10;
#N canvas 0 50 431 154 error 0;
#X obj 48 23 inlet;
#X msg 48 52 You can only call "remove" once per call to "next";
#X obj 48 94 error [easyflow/iterator] cannot remove element;
#X connect 0 0 1 0;
#X connect 1 0 2 0;
#X restore 47 114 pd error;
#X obj 104 109 bng 15 250 50 0 empty empty empty 17 7 0 10 -262144
-1 -1;
#X connect 1 0 2 1;
#X connect 2 0 13 0;
#X connect 3 0 2 0;
#X connect 3 1 4 0;
#X connect 4 0 13 1;
#X connect 11 0 12 0;
#X connect 13 0 16 0;
#X connect 16 0 8 0;
#X connect 16 1 11 0;
#X connect 16 2 10 0;
#X connect 16 3 17 0;
#X connect 17 0 15 0;
#X connect 18 0 22 0;
#X connect 20 0 21 0;
#X connect 21 0 22 1;
#X connect 22 0 23 0;
#X connect 22 1 24 0;
#X connect 24 0 3 0;
#X restore 116 179 pd remove;
#X obj 240 173 cnv 10 10 17 empty empty empty 20 12 0 14 -169008 -131009
0;
#X obj 251 173 r \$0-list;
#X obj 230 196 list;
#X obj 230 150 bng 15 250 50 0 empty empty empty 17 7 0 10 -262144
-1 -1;
#X obj 250 342 any;
#X obj 118 306 trigger anything anything;
#X obj 192 150 bng 15 250 50 0 empty empty empty 17 7 0 10 -262144
-1 -1;
#N canvas 0 50 381 263 first 0;
#X obj 56 51 inlet;
#X obj 56 172 outlet;
#X obj 109 147 cnv 10 10 17 empty empty empty 20 12 0 14 -56777 -131009
0;
#X obj 120 147 v \$0-index;
#X msg 120 123 0;
#X obj 191 146 cnv 10 10 17 empty empty empty 20 12 0 14 -260097 -131009
0;
#X obj 202 146 s \$0-canRemove;
#X msg 202 121 0;
#X obj 56 93 trigger bang bang bang;
#X connect 0 0 8 0;
#X connect 4 0 3 0;
#X connect 7 0 6 0;
#X connect 8 0 1 0;
#X connect 8 1 4 0;
#X connect 8 2 7 0;
#X restore 154 232 pd first;
#X obj 138 235 cnv 10 10 12 empty empty ● 1 5 0 15 -262144 -56777
0;
#X obj 125 235 cnv 10 10 12 empty empty ● 1 5 0 15 -262144 -260097
0;
#X obj 147 397 outlet;
#X text 82 424 bang when done, f 4;
#X text 143 424 list after removals, f 10;
#X text 228 424 current element;
#N canvas 0 50 353 422 checkIfInitialized 0;
#X obj 51 38 inlet;
#X obj 90 182 outlet;
#X obj 51 159 switch2;
#X obj 129 38 loadbang;
#X obj 90 134 tgl 15 0 empty empty empty 17 7 0 10 -262144 -1 -1 1
1;
#X obj 79 108 cnv 10 10 17 empty empty empty 20 12 0 14 -253186 -131009
0;
#X obj 90 108 r \$0-initialized;
#X msg 78 231 not initialized;
#X msg 129 59 0;
#X obj 78 256 error [easyflow/iterator] error;
#X obj 38 290 cnv 11 12 17 empty empty empty 2 9 0 14 -108262 -262144
0;
#X obj 51 290 s \$0-bangOutlet;
#X obj 51 204 t b b;
#X text 35 317 Just to make sure the user can still stop a [until]
object if that is how he is going to iterate we still bang on the outlet
, f 35;
#X connect 0 0 2 0;
#X connect 2 0 12 0;
#X connect 2 1 1 0;
#X connect 3 0 8 0;
#X connect 4 0 2 1;
#X connect 6 0 4 0;
#X connect 7 0 9 0;
#X connect 8 0 4 0;
#X connect 12 0 11 0;
#X connect 12 1 7 0;
#X restore 79 60 pd checkIfInitialized;
#X obj 402 36 inlet;
#X obj 402 57 list;
#X obj 557 104 cnv 10 10 17 empty empty empty 20 12 0 14 -56777 -131009
0;
#X obj 573 214 cnv 10 10 17 empty empty empty 20 12 0 14 -260097 -131009
0;
#X obj 453 213 cnv 11 12 17 empty empty empty 2 9 0 14 -42489 -262144
0;
#X obj 568 104 v \$0-index;
#N canvas 0 50 450 190 comments 0;
#X text 37 42 - [cyclone/iter] is like [easyflow/left2right];
#X text 37 71 - [list-abs/list-iter] like [left2right] but read groups
of elements;
#X text 40 107 - [tof/iterate] is actually like [easyflow/for];
#X restore 513 413 pd comments on other objects;
#X obj 466 101 list length;
#X floatatom 466 122 5 0 0 0 - - -;
#X obj 402 78 trigger list list bang;
#X obj 391 101 cnv 10 10 17 empty empty empty 20 12 0 14 -169008 -131009
0;
#X obj 402 101 s \$0-list;
#X obj 466 213 s \$0-length;
#X msg 568 80 0;
#X obj 525 167 + 1;
#X obj 512 188 cnv 11 12 17 empty empty empty 2 9 0 14 -229972 -262144
0;
#X obj 525 188 s \$0-end;
#X obj 584 214 s \$0-canRemove;
#X msg 584 189 0;
#X floatatom 466 163 5 0 0 0 - - -;
#X obj 632 190 cnv 10 10 17 empty empty empty 20 12 0 14 -253186 -131009
0;
#X obj 643 190 s \$0-initialized;
#X obj 466 142 trigger float float float bang;
#X msg 643 163 1;
#X obj 79 127 route next remove first bang get;
#X obj 79 81 route bang;
#X msg 79 102 next;
#X obj 59 353 cnv 11 12 17 empty empty empty 2 9 0 14 -108262 -262144
0;
#X obj 72 353 r \$0-bangOutlet;
#X obj 64 63 cnv 10 10 12 empty empty ● 1 5 0 15 -262144 -108262
0;
#X obj 298 127 route set;
#N canvas 1129 409 450 300 set 0;
#X obj 37 37 inlet;
#X obj 37 58 t f;
#X obj 83 140 cnv 10 10 17 empty empty empty 20 12 0 14 -56777 -131009
0;
#X obj 94 140 v \$0-index;
#X floatatom 37 79 5 0 0 0 - - -;
#X obj 108 70 cnv 11 12 17 empty empty empty 2 9 0 14 -42489 -262144
0;
#X obj 37 99 moses 0;
#X obj 94 118 moses;
#X obj 37 200 print [easyflow/iterator] error. Invalid argument from
set selector;
#X obj 121 70 r \$0-length;
#X obj 121 91 + 1;
#X connect 0 0 1 0;
#X connect 1 0 4 0;
#X connect 4 0 6 0;
#X connect 6 0 8 0;
#X connect 6 1 7 0;
#X connect 7 0 3 0;
#X connect 7 1 8 0;
#X connect 9 0 10 0;
#X connect 10 0 7 1;
#X restore 298 148 pd set;
#X obj 472 8 loadbang;
#X obj 472 29 bng 15 250 50 0 empty empty empty 17 7 0 10 -262144 -1
-1;
#N canvas 764 23 708 707 load_args 0;
#X obj 358 251 makefilename $%d;
#X obj 272 327 pack f \$0;
#X text 192 79 Maximum attempts, f 8;
#X obj 484 338 send pd-\$0-test_arg;
#X msg 358 282 obj 37 135 list append \$1, f 14;
#X obj 59 101 r \$0-noarg;
#X obj 206 219 select;
#X obj 272 219 trigger float float float;
#X msg 151 85 4096;
#X text 257 87 (that might be engouh);
#X obj 484 245 makefilename $%d-test;
#N canvas 344 339 309 232 \$0-test_arg 0;
#X obj 10 60 symbol \$3-test;
#X obj 133 60 makefilename $%d-test;
#X obj 37 135 list append \$3;
#X obj 10 10 r 87686-i;
#X obj 10 35 trigger bang float;
#X obj 10 85 sel s;
#X obj 37 110 b;
#X obj 37 160 s 87686-arg;
#X obj 10 185 s 87686-noarg;
#X connect 0 0 5 0;
#X connect 1 0 5 1;
#X connect 2 0 7 0;
#X connect 3 0 4 0;
#X connect 4 0 0 0;
#X connect 4 1 1 0;
#X connect 5 0 8 0;
#X connect 5 1 6 0;
#X connect 6 0 2 0;
#X restore 498 178 pd \$0-test_arg;
#X obj 164 428 r \$0-arg;
#X obj 203 496 list;
#X obj 164 463 list prepend;
#X obj 120 492 list;
#X text 180 631 list of arguments, f 9;
#X msg 272 380 \; pd-\$2-test_arg obj 10 10 r \$2-i \; pd-\$2-test_arg
obj 10 35 trigger bang float \; pd-\$2-test_arg obj 10 85 sel s \;
pd-\$2-test_arg obj 37 110 b \; pd-\$2-test_arg obj 37 160 s \$2-arg
\; pd-\$2-test_arg obj 10 185 s \$2-noarg \; pd-\$2-test_arg connect
3 0 4 0 \; pd-\$2-test_arg connect 4 1 1 0 \; pd-\$2-test_arg connect
4 0 0 0 \; pd-\$2-test_arg connect 1 0 5 1 \; pd-\$2-test_arg connect
0 0 5 0 \; pd-\$2-test_arg connect 5 1 6 0 \; pd-\$2-test_arg connect
6 0 2 0 \; pd-\$2-test_arg connect 2 0 7 0 \; pd-\$2-test_arg connect
5 0 8 0 \; \$2-i \$1 \;;
#X msg 484 272 clear \, obj 10 60 symbol \$1 \, obj 133 60 makefilename
$%d-test, f 27;
#X obj 119 638 outlet;
#X obj 151 157 until;
#X obj 206 189 + 1;
#X msg 233 147 0;
#X obj 151 123 trigger float bang float;
#X obj 151 188 float;
#X obj 151 55 inlet;
#X text 314 637 https://forum.pdpatchrepo.info/topic/10892/collect-all-arguments-as-a-list/4
;
#X connect 0 0 4 0;
#X connect 1 0 17 0;
#X connect 4 0 3 0;
#X connect 5 0 15 0;
#X connect 5 0 20 1;
#X connect 6 0 15 0;
#X connect 6 1 7 0;
#X connect 7 0 1 0;
#X connect 7 1 0 0;
#X connect 7 2 10 0;
#X connect 8 0 23 0;
#X connect 10 0 18 0;
#X connect 12 0 14 0;
#X connect 13 0 14 1;
#X connect 13 0 15 1;
#X connect 14 0 13 0;
#X connect 15 0 19 0;
#X connect 18 0 3 0;
#X connect 20 0 24 0;
#X connect 21 0 24 1;
#X connect 21 0 6 0;
#X connect 22 0 24 1;
#X connect 23 0 20 0;
#X connect 23 1 22 0;
#X connect 23 2 6 1;
#X connect 24 0 21 0;
#X connect 25 0 8 0;
#X restore 472 53 pd load_args;
#X connect 0 0 23 0;
#X connect 2 0 1 0;
#X connect 2 1 14 0;
#X connect 10 0 11 1;
#X connect 11 0 19 0;
#X connect 12 0 11 0;
#X connect 13 0 6 0;
#X connect 14 0 6 0;
#X connect 14 1 13 1;
#X connect 15 0 13 0;
#X connect 16 0 2 0;
#X connect 23 0 49 0;
#X connect 24 0 25 0;
#X connect 25 0 33 0;
#X connect 31 0 32 0;
#X connect 32 0 46 0;
#X connect 33 0 35 0;
#X connect 33 1 31 0;
#X connect 33 2 37 0;
#X connect 37 0 29 0;
#X connect 38 0 40 0;
#X connect 42 0 41 0;
#X connect 43 0 36 0;
#X connect 46 0 43 0;
#X connect 46 1 38 0;
#X connect 46 2 42 0;
#X connect 46 3 47 0;
#X connect 47 0 45 0;
#X connect 48 0 2 0;
#X connect 48 1 8 0;
#X connect 48 2 16 0;
#X connect 48 3 15 0;
#X connect 48 4 12 0;
#X connect 48 5 54 0;
#X connect 49 0 50 0;
#X connect 49 1 48 0;
#X connect 50 0 48 0;
#X connect 52 0 1 0;
#X connect 54 0 55 0;
#X connect 56 0 57 0;
#X connect 57 0 58 0;
#X connect 58 0 25 0;
