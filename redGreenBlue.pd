#N canvas 1154 223 646 447 10;
#X obj 288 53 inlet;
#X obj 385 53 inlet;
#X obj 472 55 inlet;
#X text 293 28 red;
#X text 383 28 green;
#X text 476 29 blue;
#X obj 518 141 f \$3;
#X obj 417 140 f \$2;
#X obj 305 88 loadbang;
#X obj 326 141 f \$1;
#X obj 385 341 pack f f f;
#X obj 385 271 t b f;
#X obj 472 272 t b f;
#X obj 385 363 expr $f1+$f2+$f3-1;
#X floatatom 385 385 5 0 0 0 - - -, f 5;
#X obj 32 42 inlet;
#X obj 32 396 outlet;
#X obj 32 344 float;
#X obj 32 64 route bang list;
#X obj 83 114 unpack float float float;
#X obj 305 110 trigger bang bang bang;
#X obj 83 186 trigger bang float;
#X text 243 250 -->;
#X text 106 245 integers so the binary is correct!, f 18;
#X obj 418 293 * -256;
#X obj 385 249 i;
#X obj 472 250 i;
#X obj 504 293 * -1;
#N canvas 701 113 586 162 comments 0;
#X text 53 38 You must convert the input to integers BEFORE calculating
the base 256 number. Im not sure exactly why but if you try to convert
to inger AFTER you got the digit on base 256 you will get wrong results
;
#X restore 119 397 pd comments;
#X obj 288 250 i;
#X obj 288 292 * -65536;
#X connect 0 0 29 0;
#X connect 1 0 25 0;
#X connect 2 0 26 0;
#X connect 6 0 26 0;
#X connect 7 0 25 0;
#X connect 8 0 20 0;
#X connect 9 0 29 0;
#X connect 10 0 13 0;
#X connect 11 0 10 0;
#X connect 11 1 24 0;
#X connect 12 0 10 0;
#X connect 12 1 27 0;
#X connect 13 0 14 0;
#X connect 14 0 17 1;
#X connect 15 0 18 0;
#X connect 17 0 16 0;
#X connect 18 0 17 0;
#X connect 18 1 19 0;
#X connect 19 0 21 0;
#X connect 19 1 25 0;
#X connect 19 2 26 0;
#X connect 20 0 9 0;
#X connect 20 1 7 0;
#X connect 20 2 6 0;
#X connect 21 0 17 0;
#X connect 21 1 29 0;
#X connect 24 0 10 1;
#X connect 25 0 11 0;
#X connect 26 0 12 0;
#X connect 27 0 10 2;
#X connect 29 0 30 0;
#X connect 30 0 10 0;
